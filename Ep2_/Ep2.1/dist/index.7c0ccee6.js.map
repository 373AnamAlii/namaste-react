{"mappings":"AAmDA,MAAM,SAAS,MAAM,aAAa,CAAC,OAAO;IAAE,IAAI;AAAS,GAAG;IAC1D,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;IACD,MAAM,aAAa,CAAC,OAAO;QAAE,IAAI;IAAS,GAAG;QAC3C,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;QAC9B,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;KAC/B;CACF;AAED,MAAM,UAAU,MAAM,aAAa,CACjC,MACA;IAAE,IAAI;IAAW,KAAK;AAAM,GAC5B;AAGF,QAAQ,GAAG,CAAC;AAEZ,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AACzD,KAAK,MAAM,CAAC","sources":["app.js"],"sourcesContent":["{\r\n  /* We are going to write production ready code   */\r\n}\r\n\r\n{\r\n  /*  \r\n  - There are a lot of other libraries and packages which make our app fast and production ready\r\n  - We will now see how we will get those packages in our app\r\n  \r\n  -NPM : Does not stand for node package manager. It does not have a full form.\r\n  - npm manages packages but does not stand for node package manager.\r\n  -npm is a standard repository for all the packages     \r\n  - we can use packages using npm\r\n\r\n  -create react app automatically has npm inside it.\r\n  -lets make our project use npm\r\n  -in terminal write npm init and further cmds\r\n\r\n  -after all the commands,package.json is created.\r\n  -package.json is a configuration for our npm likename desc,version\r\n  -Now we can get our packages(dependencies) into our project.\r\n  -dependencies are packages which our project needs to run\r\n  -most imp package is a bundler. Our whole code i.e html,css and js files needs to be bundled together(minified,compressed,cleaned).Bundler helps us do all these things.\r\n  -most popular bundler is webpack,parcel,weed\r\n  -Bundler basically packages your app rpoperly so that it can be shipped to production.\r\n  -create react app behind the scene uses webpack bundler and babel.\r\n  -we will use parcel as bundler in our code.\r\n  - we can install parcel easily as we have npm now.\r\n  -There are two types of packages that we can install,one is the dev dependency and another is the normal dependency.\r\n      -dev dependency is used only for development and not for production.\r\n      -normal dependency can be used in production also\r\n  - for dev dependency we give -D\r\n\r\n  - package-lock.json keeps the track of exact version i.e 2.8.3\r\n  -package.json will store ^2.8.3 as the  version, where ^means do minor updates to the version if present.It keeps the approx version.\r\n  - package-lock.json has hash to verify whatever is their in my machine is the same version that is deployed to production.It keeps track of exact version of all the dependencies.\r\n  - node modules contain all the code that we fetched from npm\r\n  -when we did npm install parcel, all the code of parcel was fetched and was put inside npm modules.Node modules is like a database where all our packages exist.\r\n  - we have parcel along with their own dependencies which in turn have their own dependency this is called transitive dependency in node modules.\r\n  \r\n  -Every dependency will have its own package.json and has its own dependencies\r\n  \r\n  *******  IMP   ********\r\n  -we will have a file called .gitignore which will not put the files  into production or git. So put files which you don't want to be pushed inside gitignore\r\n  - we will put node modules inside gitignore file as it is quiet bulky and is \r\n      -we don't need to push node modules into git or production because if we have package.json or package-lock.json, we can regenerate our node modules.\r\n      -\r\n  -we should push package.json and package-lock.json into git as they maintain a note of what all dependencies our project needs.\r\n     -\r\n  */\r\n}\r\nconst parent = React.createElement(\"div\", { id: \"parent\" }, [\r\n  React.createElement(\"div\", { id: \"child1\" }, [\r\n    React.createElement(\"h1\", {}, \"I'm an h1 tag of child1\"),\r\n    React.createElement(\"h2\", {}, \"I'm an h2 tag of child1\"),\r\n  ]),\r\n  React.createElement(\"div\", { id: \"child2\" }, [\r\n    React.createElement(\"h1\", {}, \"I'm an h1 tag of child2\"),\r\n    React.createElement(\"h2\", {}, \"I'm an h2 tag of child2\"),\r\n  ]),\r\n]);\r\n\r\nconst heading = React.createElement(\r\n  \"h1\",\r\n  { id: \"heading\", xyz: \"abc\" },\r\n  \"Hello world from React!\"\r\n);\r\n\r\nconsole.log(parent);\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(parent);\r\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}